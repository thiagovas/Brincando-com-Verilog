$date
	Tue Mar 11 23:45:59 2014
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module tb_Alu $end
$var wire 32 ! aluout [31:0] $end
$var wire 1 " compout $end
$var wire 1 # overflow $end
$var reg 32 $ a [31:0] $end
$var reg 32 % b [31:0] $end
$var reg 3 & op [2:0] $end
$var reg 1 ' unsig $end
$scope module tb $end
$var wire 32 ( a [31:0] $end
$var wire 32 ) b [31:0] $end
$var wire 3 * op [2:0] $end
$var wire 1 + unsig $end
$var reg 32 , aluout [31:0] $end
$var reg 1 - compout $end
$var reg 1 . overflow $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0.
1-
b11111111111111111111111111111000 ,
1+
b0 *
b11111111111111111111111111111100 )
b11111111111111111111111111111011 (
1'
b0 &
b11111111111111111111111111111100 %
b11111111111111111111111111111011 $
0#
1"
b11111111111111111111111111111000 !
$end
#10
0-
0"
1.
1#
b11111111111111111111111111111110 ,
b11111111111111111111111111111110 !
0'
0+
b10 &
b10 *
b1111111111111111111111111111111 %
b1111111111111111111111111111111 )
b1111111111111111111111111111111 $
b1111111111111111111111111111111 (
#20
0.
0#
b1010000001011001011011101111111 ,
b1010000001011001011011101111111 !
b1100110001100100011001111000 %
b1100110001100100011001111000 )
b1000011011001100111000100000111 $
b1000011011001100111000100000111 (
#30
b10001100100000000000000 ,
b10001100100000000000000 !
b0 &
b0 *
#40
b1001111111001100111011101111111 ,
b1001111111001100111011101111111 !
b1 &
b1 *
#50
b1010000001011001011011101111111 ,
b1010000001011001011011101111111 !
b10 &
b10 *
#60
b10110000000110011000100010000000 ,
b10110000000110011000100010000000 !
b100 &
b100 *
#70
b1001111101000000011011101111111 ,
b1001111101000000011011101111111 !
b101 &
b101 *
#80
b110110101000000010101010001111 ,
b110110101000000010101010001111 !
b110 &
b110 *
#90
