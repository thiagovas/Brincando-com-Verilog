#! /usr/bin/vvp
:ivl_version "0.9.6 " "(v0_9_6)";
:vpi_time_precision + 0;
:vpi_module "system";
:vpi_module "v2005_math";
:vpi_module "va_math";
S_0x1de1f90 .scope module, "tb_Alu" "tb_Alu" 2 5;
 .timescale 0 0;
v0x1e10640_0 .var "a", 31 0;
v0x1e106e0_0 .net "aluout", 31 0, v0x1e10230_0; 1 drivers
v0x1e10790_0 .var "b", 31 0;
v0x1e10840_0 .net "compout", 0 0, v0x1e10370_0; 1 drivers
v0x1e10920_0 .var "op", 2 0;
v0x1e109d0_0 .net "overflow", 0 0, v0x1e104c0_0; 1 drivers
v0x1e10a90_0 .var "unsig", 0 0;
S_0x1de2080 .scope module, "tb" "Alu" 2 14, 3 5, S_0x1de1f90;
 .timescale 0 0;
v0x1de3110_0 .net "a", 31 0, v0x1e10640_0; 1 drivers
v0x1e10230_0 .var "aluout", 31 0;
v0x1e102d0_0 .net "b", 31 0, v0x1e10790_0; 1 drivers
v0x1e10370_0 .var "compout", 0 0;
v0x1e10420_0 .net "op", 2 0, v0x1e10920_0; 1 drivers
v0x1e104c0_0 .var "overflow", 0 0;
v0x1e105a0_0 .net "unsig", 0 0, v0x1e10a90_0; 1 drivers
E_0x1ddcf30/0 .event edge, v0x1e105a0_0, v0x1de3110_0, v0x1e102d0_0, v0x1e10420_0;
E_0x1ddcf30/1 .event edge, v0x1e10230_0;
E_0x1ddcf30 .event/or E_0x1ddcf30/0, E_0x1ddcf30/1;
    .scope S_0x1de2080;
T_0 ;
    %wait E_0x1ddcf30;
    %load/v 8, v0x1e105a0_0, 1;
    %mov 9, 0, 2;
    %cmpi/u 8, 1, 3;
    %jmp/0xz  T_0.0, 4;
    %load/v 8, v0x1de3110_0, 32;
    %load/v 40, v0x1e102d0_0, 32;
    %cmp/u 8, 40, 32;
    %mov 8, 5, 1;
    %jmp/0  T_0.2, 8;
    %mov 9, 1, 1;
    %jmp/1  T_0.4, 8;
T_0.2 ; End of true expr.
    %jmp/0  T_0.3, 8;
 ; End of false expr.
    %blend  9, 0, 1; Condition unknown.
    %jmp  T_0.4;
T_0.3 ;
    %mov 9, 0, 1; Return false value
T_0.4 ;
    %ix/load 0, 1, 0;
    %assign/v0 v0x1e10370_0, 0, 9;
    %jmp T_0.1;
T_0.0 ;
    %load/v 8, v0x1de3110_0, 32;
    %load/v 40, v0x1e102d0_0, 32;
    %cmp/s 8, 40, 32;
    %mov 8, 5, 1;
    %jmp/0  T_0.5, 8;
    %mov 9, 1, 1;
    %jmp/1  T_0.7, 8;
T_0.5 ; End of true expr.
    %jmp/0  T_0.6, 8;
 ; End of false expr.
    %blend  9, 0, 1; Condition unknown.
    %jmp  T_0.7;
T_0.6 ;
    %mov 9, 0, 1; Return false value
T_0.7 ;
    %ix/load 0, 1, 0;
    %assign/v0 v0x1e10370_0, 0, 9;
T_0.1 ;
    %load/v 8, v0x1e10420_0, 3;
    %cmpi/u 8, 0, 3;
    %jmp/1 T_0.8, 6;
    %cmpi/u 8, 1, 3;
    %jmp/1 T_0.9, 6;
    %cmpi/u 8, 2, 3;
    %jmp/1 T_0.10, 6;
    %cmpi/u 8, 4, 3;
    %jmp/1 T_0.11, 6;
    %cmpi/u 8, 5, 3;
    %jmp/1 T_0.12, 6;
    %cmpi/u 8, 6, 3;
    %jmp/1 T_0.13, 6;
    %ix/load 0, 32, 0;
    %assign/v0 v0x1e10230_0, 0, 0;
    %ix/load 0, 1, 0;
    %assign/v0 v0x1e104c0_0, 0, 0;
    %jmp T_0.15;
T_0.8 ;
    %load/v 8, v0x1de3110_0, 32;
    %load/v 40, v0x1e102d0_0, 32;
    %and 8, 40, 32;
    %ix/load 0, 32, 0;
    %assign/v0 v0x1e10230_0, 0, 8;
    %ix/load 0, 1, 0;
    %assign/v0 v0x1e104c0_0, 0, 0;
    %jmp T_0.15;
T_0.9 ;
    %load/v 8, v0x1de3110_0, 32;
    %load/v 40, v0x1e102d0_0, 32;
    %or 8, 40, 32;
    %ix/load 0, 32, 0;
    %assign/v0 v0x1e10230_0, 0, 8;
    %ix/load 0, 1, 0;
    %assign/v0 v0x1e104c0_0, 0, 0;
    %jmp T_0.15;
T_0.10 ;
    %load/v 8, v0x1e105a0_0, 1;
    %mov 9, 0, 2;
    %cmpi/u 8, 1, 3;
    %jmp/0xz  T_0.16, 4;
    %load/v 8, v0x1de3110_0, 32;
    %load/v 40, v0x1e102d0_0, 32;
    %add 8, 40, 32;
    %set/v v0x1e10230_0, 8, 32;
    %jmp T_0.17;
T_0.16 ;
    %load/v 8, v0x1de3110_0, 32;
    %load/v 40, v0x1e102d0_0, 32;
    %add 8, 40, 32;
    %set/v v0x1e10230_0, 8, 32;
T_0.17 ;
    %load/v 8, v0x1de3110_0, 32;
    %cmp/s 0, 8, 32;
    %or 5, 4, 1;
    %mov 8, 5, 1;
    %load/v 9, v0x1e102d0_0, 32;
    %cmp/s 0, 9, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %jmp/0xz  T_0.18, 8;
    %load/v 8, v0x1e10230_0, 32;
   %cmpi/s 8, 0, 32;
    %mov 8, 5, 1;
    %jmp/0  T_0.20, 8;
    %mov 9, 1, 1;
    %jmp/1  T_0.22, 8;
T_0.20 ; End of true expr.
    %jmp/0  T_0.21, 8;
 ; End of false expr.
    %blend  9, 0, 1; Condition unknown.
    %jmp  T_0.22;
T_0.21 ;
    %mov 9, 0, 1; Return false value
T_0.22 ;
    %set/v v0x1e104c0_0, 9, 1;
    %jmp T_0.19;
T_0.18 ;
    %load/v 8, v0x1de3110_0, 32;
   %cmpi/s 8, 0, 32;
    %mov 8, 5, 1;
    %load/v 9, v0x1e102d0_0, 32;
   %cmpi/s 9, 0, 32;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %jmp/0xz  T_0.23, 8;
    %load/v 8, v0x1e10230_0, 32;
    %cmp/s 0, 8, 32;
    %or 5, 4, 1;
    %mov 8, 5, 1;
    %jmp/0  T_0.25, 8;
    %mov 9, 1, 1;
    %jmp/1  T_0.27, 8;
T_0.25 ; End of true expr.
    %jmp/0  T_0.26, 8;
 ; End of false expr.
    %blend  9, 0, 1; Condition unknown.
    %jmp  T_0.27;
T_0.26 ;
    %mov 9, 0, 1; Return false value
T_0.27 ;
    %set/v v0x1e104c0_0, 9, 1;
T_0.23 ;
T_0.19 ;
    %jmp T_0.15;
T_0.11 ;
    %load/v 8, v0x1de3110_0, 32;
    %load/v 40, v0x1e102d0_0, 32;
    %nor 8, 40, 32;
    %ix/load 0, 32, 0;
    %assign/v0 v0x1e10230_0, 0, 8;
    %ix/load 0, 1, 0;
    %assign/v0 v0x1e104c0_0, 0, 0;
    %jmp T_0.15;
T_0.12 ;
    %load/v 8, v0x1de3110_0, 32;
    %load/v 40, v0x1e102d0_0, 32;
    %xor 8, 40, 32;
    %ix/load 0, 32, 0;
    %assign/v0 v0x1e10230_0, 0, 8;
    %ix/load 0, 1, 0;
    %assign/v0 v0x1e104c0_0, 0, 0;
    %jmp T_0.15;
T_0.13 ;
    %load/v 8, v0x1e105a0_0, 1;
    %mov 9, 0, 2;
    %cmpi/u 8, 1, 3;
    %jmp/0xz  T_0.28, 4;
    %load/v 8, v0x1de3110_0, 32;
    %load/v 40, v0x1e102d0_0, 32;
    %sub 8, 40, 32;
    %set/v v0x1e10230_0, 8, 32;
    %jmp T_0.29;
T_0.28 ;
    %load/v 8, v0x1de3110_0, 32;
    %load/v 40, v0x1e102d0_0, 32;
    %sub 8, 40, 32;
    %set/v v0x1e10230_0, 8, 32;
T_0.29 ;
    %load/v 8, v0x1de3110_0, 32;
    %cmp/s 0, 8, 32;
    %or 5, 4, 1;
    %mov 8, 5, 1;
    %load/v 9, v0x1e102d0_0, 32;
   %cmpi/s 9, 0, 32;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %jmp/0xz  T_0.30, 8;
    %load/v 8, v0x1e10230_0, 32;
   %cmpi/u 8, 0, 32;
    %mov 8, 5, 1;
    %jmp/0  T_0.32, 8;
    %mov 9, 1, 1;
    %jmp/1  T_0.34, 8;
T_0.32 ; End of true expr.
    %jmp/0  T_0.33, 8;
 ; End of false expr.
    %blend  9, 0, 1; Condition unknown.
    %jmp  T_0.34;
T_0.33 ;
    %mov 9, 0, 1; Return false value
T_0.34 ;
    %ix/load 0, 1, 0;
    %assign/v0 v0x1e104c0_0, 0, 9;
    %jmp T_0.31;
T_0.30 ;
    %load/v 8, v0x1de3110_0, 32;
   %cmpi/s 8, 0, 32;
    %mov 8, 5, 1;
    %load/v 9, v0x1e102d0_0, 32;
    %cmp/s 0, 9, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %jmp/0xz  T_0.35, 8;
    %load/v 8, v0x1e10230_0, 32;
    %cmp/u 0, 8, 32;
    %or 5, 4, 1;
    %mov 8, 5, 1;
    %jmp/0  T_0.37, 8;
    %mov 9, 1, 1;
    %jmp/1  T_0.39, 8;
T_0.37 ; End of true expr.
    %jmp/0  T_0.38, 8;
 ; End of false expr.
    %blend  9, 0, 1; Condition unknown.
    %jmp  T_0.39;
T_0.38 ;
    %mov 9, 0, 1; Return false value
T_0.39 ;
    %ix/load 0, 1, 0;
    %assign/v0 v0x1e104c0_0, 0, 9;
T_0.35 ;
T_0.31 ;
    %jmp T_0.15;
T_0.15 ;
    %jmp T_0;
    .thread T_0, $push;
    .scope S_0x1de1f90;
T_1 ;
    %vpi_call 2 16 "$dumpfile", "result.vcd";
    %vpi_call 2 17 "$dumpvars", 1'sb0, S_0x1de1f90;
    %movi 8, 4294967291, 32;
    %set/v v0x1e10640_0, 8, 32;
    %movi 8, 4294967292, 32;
    %set/v v0x1e10790_0, 8, 32;
    %set/v v0x1e10a90_0, 1, 1;
    %set/v v0x1e10920_0, 0, 3;
    %delay 10, 0;
    %vpi_call 2 24 "$display", "Result: %d %d %d\012", v0x1e10640_0, v0x1e10790_0, v0x1e106e0_0;
    %vpi_call 2 27 "$display", "Teste para overflow: Neste teste o sinal de overflow tem que ser 1(um)";
    %movi 8, 2147483647, 32;
    %set/v v0x1e10640_0, 8, 32;
    %movi 8, 2147483647, 32;
    %set/v v0x1e10790_0, 8, 32;
    %movi 8, 2, 3;
    %set/v v0x1e10920_0, 8, 3;
    %set/v v0x1e10a90_0, 0, 1;
    %vpi_call 2 32 "$display", "a = %b\012b = %b\012op = %b", v0x1e10640_0, v0x1e10790_0, v0x1e10920_0;
    %delay 10, 0;
    %vpi_call 2 34 "$display", "Result: compout=%b  overflow=%b  aluout=%b\012\012", v0x1e10840_0, v0x1e109d0_0, v0x1e106e0_0;
    %vpi_call 2 37 "$display", "Teste para overflow: Neste teste o sinal de overflow tem que ser 0(zero)";
    %movi 8, 1130787079, 32;
    %set/v v0x1e10640_0, 8, 32;
    %movi 8, 214320760, 32;
    %set/v v0x1e10790_0, 8, 32;
    %movi 8, 2, 3;
    %set/v v0x1e10920_0, 8, 3;
    %set/v v0x1e10a90_0, 0, 1;
    %vpi_call 2 42 "$display", "a = %b\012b = %b\012op = %b", v0x1e10640_0, v0x1e10790_0, v0x1e10920_0;
    %delay 10, 0;
    %vpi_call 2 44 "$display", "Result: compout=%b  overflow=%b  aluout=%b\012\012", v0x1e10840_0, v0x1e109d0_0, v0x1e106e0_0;
    %vpi_call 2 48 "$display", "Teste das opera\303\247\303\265es:\012";
    %vpi_call 2 49 "$display", "AND";
    %movi 8, 1130787079, 32;
    %set/v v0x1e10640_0, 8, 32;
    %movi 8, 214320760, 32;
    %set/v v0x1e10790_0, 8, 32;
    %set/v v0x1e10920_0, 0, 3;
    %set/v v0x1e10a90_0, 0, 1;
    %vpi_call 2 54 "$display", "a = %b\012b = %b\012op = %b", v0x1e10640_0, v0x1e10790_0, v0x1e10920_0;
    %delay 10, 0;
    %vpi_call 2 56 "$display", "Result: compout=%b  overflow=%b  aluout=%b\012\012", v0x1e10840_0, v0x1e109d0_0, v0x1e106e0_0;
    %vpi_call 2 59 "$display", "OR";
    %movi 8, 1130787079, 32;
    %set/v v0x1e10640_0, 8, 32;
    %movi 8, 214320760, 32;
    %set/v v0x1e10790_0, 8, 32;
    %movi 8, 1, 3;
    %set/v v0x1e10920_0, 8, 3;
    %set/v v0x1e10a90_0, 0, 1;
    %vpi_call 2 64 "$display", "a = %b\012b = %b\012op = %b", v0x1e10640_0, v0x1e10790_0, v0x1e10920_0;
    %delay 10, 0;
    %vpi_call 2 66 "$display", "Result: compout=%b  overflow=%b  aluout=%b\012\012", v0x1e10840_0, v0x1e109d0_0, v0x1e106e0_0;
    %vpi_call 2 69 "$display", "ADD";
    %movi 8, 1130787079, 32;
    %set/v v0x1e10640_0, 8, 32;
    %movi 8, 214320760, 32;
    %set/v v0x1e10790_0, 8, 32;
    %movi 8, 2, 3;
    %set/v v0x1e10920_0, 8, 3;
    %set/v v0x1e10a90_0, 0, 1;
    %vpi_call 2 74 "$display", "a = %b\012b = %b\012op = %b", v0x1e10640_0, v0x1e10790_0, v0x1e10920_0;
    %delay 10, 0;
    %vpi_call 2 76 "$display", "Result: compout=%b  overflow=%b  aluout=%b\012\012", v0x1e10840_0, v0x1e109d0_0, v0x1e106e0_0;
    %vpi_call 2 79 "$display", "NOR";
    %movi 8, 1130787079, 32;
    %set/v v0x1e10640_0, 8, 32;
    %movi 8, 214320760, 32;
    %set/v v0x1e10790_0, 8, 32;
    %movi 8, 4, 3;
    %set/v v0x1e10920_0, 8, 3;
    %set/v v0x1e10a90_0, 0, 1;
    %vpi_call 2 84 "$display", "a = %b\012b = %b\012op = %b", v0x1e10640_0, v0x1e10790_0, v0x1e10920_0;
    %delay 10, 0;
    %vpi_call 2 86 "$display", "Result: compout=%b  overflow=%b  aluout=%b\012\012", v0x1e10840_0, v0x1e109d0_0, v0x1e106e0_0;
    %vpi_call 2 89 "$display", "XOR";
    %movi 8, 1130787079, 32;
    %set/v v0x1e10640_0, 8, 32;
    %movi 8, 214320760, 32;
    %set/v v0x1e10790_0, 8, 32;
    %movi 8, 5, 3;
    %set/v v0x1e10920_0, 8, 3;
    %set/v v0x1e10a90_0, 0, 1;
    %vpi_call 2 94 "$display", "a = %b\012b = %b\012op = %b", v0x1e10640_0, v0x1e10790_0, v0x1e10920_0;
    %delay 10, 0;
    %vpi_call 2 96 "$display", "Result: compout=%b  overflow=%b  aluout=%b\012\012", v0x1e10840_0, v0x1e109d0_0, v0x1e106e0_0;
    %vpi_call 2 99 "$display", "SUB";
    %movi 8, 1130787079, 32;
    %set/v v0x1e10640_0, 8, 32;
    %movi 8, 214320760, 32;
    %set/v v0x1e10790_0, 8, 32;
    %movi 8, 6, 3;
    %set/v v0x1e10920_0, 8, 3;
    %set/v v0x1e10a90_0, 0, 1;
    %vpi_call 2 104 "$display", "a = %b\012b = %b\012op = %b", v0x1e10640_0, v0x1e10790_0, v0x1e10920_0;
    %delay 10, 0;
    %vpi_call 2 106 "$display", "Result: compout=%b  overflow=%b  aluout=%b\012\012", v0x1e10840_0, v0x1e109d0_0, v0x1e106e0_0;
    %end;
    .thread T_1;
# The file index is used to find the file name in the following table.
:file_names 4;
    "N/A";
    "<interactive>";
    "tb_Alu.v";
    "Alu.v";
